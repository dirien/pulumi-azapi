# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetResourceListResult',
    'AwaitableGetResourceListResult',
    'get_resource_list',
    'get_resource_list_output',
]

@pulumi.output_type
class GetResourceListResult:
    """
    A collection of values returned by getResourceList.
    """
    def __init__(__self__, id=None, output=None, parent_id=None, response_export_values=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if output and not isinstance(output, str):
            raise TypeError("Expected argument 'output' to be a str")
        pulumi.set(__self__, "output", output)
        if parent_id and not isinstance(parent_id, str):
            raise TypeError("Expected argument 'parent_id' to be a str")
        pulumi.set(__self__, "parent_id", parent_id)
        if response_export_values and not isinstance(response_export_values, list):
            raise TypeError("Expected argument 'response_export_values' to be a list")
        pulumi.set(__self__, "response_export_values", response_export_values)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def output(self) -> str:
        """
        The output json containing the properties specified in `response_export_values`. Here are some examples to decode json and extract the value.
        """
        return pulumi.get(self, "output")

    @property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> str:
        return pulumi.get(self, "parent_id")

    @property
    @pulumi.getter(name="responseExportValues")
    def response_export_values(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "response_export_values")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


class AwaitableGetResourceListResult(GetResourceListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceListResult(
            id=self.id,
            output=self.output,
            parent_id=self.parent_id,
            response_export_values=self.response_export_values,
            type=self.type)


def get_resource_list(parent_id: Optional[str] = None,
                      response_export_values: Optional[Sequence[str]] = None,
                      type: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceListResult:
    """
    This resource can list all resources of a specific type under a scope. If the API supports paging, it will automatically fetch all pages and return the full list.

    ## Example Usage


    :param str parent_id: The parent resource ID to list resources under. e.g. `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup`.
    :param Sequence[str] response_export_values: A list of path that needs to be exported from response body.
           Setting it to `["*"]` will export the full response body.
           Here's an example. If it sets to `["value"]`, it will set the following json to computed property `output`.
           ```
           {
           "value": [
           {
           "id": "id1",
           "Permissions": "Full"
           },
           {
           "id": "id2",
           "Permissions": "Full"
           }
           ]
           }
           ```
    :param str type: It is in a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.
           `<api-version>` is version of the API used to manage this azure resource.
    """
    __args__ = dict()
    __args__['parentId'] = parent_id
    __args__['responseExportValues'] = response_export_values
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azapi:index/getResourceList:getResourceList', __args__, opts=opts, typ=GetResourceListResult).value

    return AwaitableGetResourceListResult(
        id=pulumi.get(__ret__, 'id'),
        output=pulumi.get(__ret__, 'output'),
        parent_id=pulumi.get(__ret__, 'parent_id'),
        response_export_values=pulumi.get(__ret__, 'response_export_values'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_resource_list)
def get_resource_list_output(parent_id: Optional[pulumi.Input[str]] = None,
                             response_export_values: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                             type: Optional[pulumi.Input[str]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetResourceListResult]:
    """
    This resource can list all resources of a specific type under a scope. If the API supports paging, it will automatically fetch all pages and return the full list.

    ## Example Usage


    :param str parent_id: The parent resource ID to list resources under. e.g. `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup`.
    :param Sequence[str] response_export_values: A list of path that needs to be exported from response body.
           Setting it to `["*"]` will export the full response body.
           Here's an example. If it sets to `["value"]`, it will set the following json to computed property `output`.
           ```
           {
           "value": [
           {
           "id": "id1",
           "Permissions": "Full"
           },
           {
           "id": "id2",
           "Permissions": "Full"
           }
           ]
           }
           ```
    :param str type: It is in a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.
           `<api-version>` is version of the API used to manage this azure resource.
    """
    ...
