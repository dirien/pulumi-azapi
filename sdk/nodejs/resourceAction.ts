// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource can perform any Azure resource manager resource action.
 * It's recommended to use `azapi.ResourceAction` resource to perform actions which change a resource's state, please use `azapi.ResourceAction` data source,
 * if user wants to perform readonly action.
 *
 * > **Note** When delete `azapi.ResourceAction`, no operation will be performed.
 *
 * ## Example Usage
 *
 * Here's an example to use the `azapi.ResourceAction` resource to register a provider.
 *
 * Here's an example to use the `azapi.ResourceAction` resource to perform a provider action.
 */
export class ResourceAction extends pulumi.CustomResource {
    /**
     * Get an existing ResourceAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceActionState, opts?: pulumi.CustomResourceOptions): ResourceAction {
        return new ResourceAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azapi:index/resourceAction:ResourceAction';

    /**
     * Returns true if the given object is an instance of ResourceAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceAction.__pulumiType;
    }

    /**
     * The name of the resource action. It's also possible to make Http requests towards the resource ID if leave this field empty.
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * A JSON object that contains the request body.
     */
    public readonly body!: pulumi.Output<string | undefined>;
    /**
     * A list of ARM resource IDs which are used to avoid modify azapi resources at the same time.
     */
    public readonly locks!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the Http method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.
     */
    public readonly method!: pulumi.Output<string | undefined>;
    /**
     * The output json containing the properties specified in `responseExportValues`. Here are some examples to decode json and extract the value.
     */
    public /*out*/ readonly output!: pulumi.Output<string>;
    /**
     * The ID of an existing azure source.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * A list of path that needs to be exported from response body.
     * Setting it to `["*"]` will export the full response body.
     * Here's an example. If it sets to `["keys"]`, it will set the following json to computed property `output`.
     * ```
     * {
     * "keys": [
     * {
     * "KeyName": "Primary",
     * "Permissions": "Full",
     * "Value": "nHGYNd******i4wdug=="
     * },
     * {
     * "KeyName": "Secondary",
     * "Permissions": "Full",
     * "Value": "6yoCad******SLzKzg=="
     * }
     * ]
     * }
     * ```
     */
    public readonly responseExportValues!: pulumi.Output<string[] | undefined>;
    /**
     * It is in a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.
     * `<api-version>` is version of the API used to manage this azure resource.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ResourceAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceActionArgs | ResourceActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceActionState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["locks"] = state ? state.locks : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["output"] = state ? state.output : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["responseExportValues"] = state ? state.responseExportValues : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ResourceActionArgs | undefined;
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["locks"] = args ? args.locks : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["responseExportValues"] = args ? args.responseExportValues : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["output"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceAction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceAction resources.
 */
export interface ResourceActionState {
    /**
     * The name of the resource action. It's also possible to make Http requests towards the resource ID if leave this field empty.
     */
    action?: pulumi.Input<string>;
    /**
     * A JSON object that contains the request body.
     */
    body?: pulumi.Input<string>;
    /**
     * A list of ARM resource IDs which are used to avoid modify azapi resources at the same time.
     */
    locks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the Http method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.
     */
    method?: pulumi.Input<string>;
    /**
     * The output json containing the properties specified in `responseExportValues`. Here are some examples to decode json and extract the value.
     */
    output?: pulumi.Input<string>;
    /**
     * The ID of an existing azure source.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * A list of path that needs to be exported from response body.
     * Setting it to `["*"]` will export the full response body.
     * Here's an example. If it sets to `["keys"]`, it will set the following json to computed property `output`.
     * ```
     * {
     * "keys": [
     * {
     * "KeyName": "Primary",
     * "Permissions": "Full",
     * "Value": "nHGYNd******i4wdug=="
     * },
     * {
     * "KeyName": "Secondary",
     * "Permissions": "Full",
     * "Value": "6yoCad******SLzKzg=="
     * }
     * ]
     * }
     * ```
     */
    responseExportValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * It is in a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.
     * `<api-version>` is version of the API used to manage this azure resource.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceAction resource.
 */
export interface ResourceActionArgs {
    /**
     * The name of the resource action. It's also possible to make Http requests towards the resource ID if leave this field empty.
     */
    action?: pulumi.Input<string>;
    /**
     * A JSON object that contains the request body.
     */
    body?: pulumi.Input<string>;
    /**
     * A list of ARM resource IDs which are used to avoid modify azapi resources at the same time.
     */
    locks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the Http method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.
     */
    method?: pulumi.Input<string>;
    /**
     * The ID of an existing azure source.
     */
    resourceId: pulumi.Input<string>;
    /**
     * A list of path that needs to be exported from response body.
     * Setting it to `["*"]` will export the full response body.
     * Here's an example. If it sets to `["keys"]`, it will set the following json to computed property `output`.
     * ```
     * {
     * "keys": [
     * {
     * "KeyName": "Primary",
     * "Permissions": "Full",
     * "Value": "nHGYNd******i4wdug=="
     * },
     * {
     * "KeyName": "Secondary",
     * "Permissions": "Full",
     * "Value": "6yoCad******SLzKzg=="
     * }
     * ]
     * }
     * ```
     */
    responseExportValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * It is in a format like `<resource-type>@<api-version>`. `<resource-type>` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.
     * `<api-version>` is version of the API used to manage this azure resource.
     */
    type: pulumi.Input<string>;
}
