{
    "name": "azapi",
    "displayName": "AzAPI",
    "description": "A Pulumi package for creating and managing Azapi resources",
    "keywords": [
        "pulumi",
        "azapi",
        "category/cloud"
    ],
    "homepage": "https://github.com/dirien/pulumi-azapi",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`azapi` Terraform Provider](https://github.com/Azure/terraform-provider-azapi).",
    "repository": "https://github.com/dirien/pulumi-azapi",
    "pluginDownloadURL": "github://api.github.com/dirien/pulumi-azapi",
    "publisher": "dirien",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "ediri"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-azapi/sdk/go/azapi"
        },
        "java": {
            "basePackage": "io.dirien",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": ""
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Azapi resources",
            "packageName": "@ediri/azapi",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Azure/terraform-provider-azapi)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-azapi` repo](https://github.com/dirien/pulumi-azapi/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-azapi` repo](https://github.com/Azure/terraform-provider-azapi/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "ediri_azapi",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Azure/terraform-provider-azapi)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-azapi` repo](https://github.com/dirien/pulumi-azapi/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-azapi` repo](https://github.com/Azure/terraform-provider-azapi/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "clientCertificatePassword": {
                "type": "string",
                "description": "The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.\n"
            },
            "defaultLocation": {
                "type": "string"
            },
            "defaultName": {
                "type": "string"
            },
            "defaultNamingPrefix": {
                "type": "string"
            },
            "defaultNamingSuffix": {
                "type": "string"
            },
            "defaultTags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "disableCorrelationRequestId": {
                "type": "boolean",
                "description": "This will disable the x-ms-correlation-request-id header.\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "This will disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.\n"
            },
            "environment": {
                "type": "string",
                "description": "The Cloud Environment which should be used. Possible values are public, usgovernment and china. Defaults to public.\n"
            },
            "oidcRequestToken": {
                "type": "string",
                "description": "The bearer token for the request to the OIDC provider. For use When authenticating as a Service Principal using OpenID\nConnect.\n"
            },
            "oidcRequestUrl": {
                "type": "string",
                "description": "The URL for the OIDC provider from which to request an ID token. For use When authenticating as a Service Principal\nusing OpenID Connect.\n"
            },
            "oidcToken": {
                "type": "string",
                "description": "The OIDC ID token for use when authenticating as a Service Principal using OpenID Connect.\n"
            },
            "oidcTokenFilePath": {
                "type": "string",
                "description": "The path to a file containing an OIDC ID token for use when authenticating as a Service Principal using OpenID Connect.\n"
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.\n"
            },
            "skipProviderRegistration": {
                "type": "boolean",
                "description": "Should the Provider skip registering all of the Resource Providers that it supports, if they're not already registered?\n"
            },
            "subscriptionId": {
                "type": "string",
                "description": "The Subscription ID which should be used.\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used.\n"
            },
            "useOidc": {
                "type": "boolean",
                "description": "Allow OpenID Connect to be used for authentication\n"
            }
        },
        "defaults": [
            "environment"
        ]
    },
    "types": {
        "azapi:index/ResourceIdentity:ResourceIdentity": {
            "properties": {
                "identityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of User Managed Identity ID's which should be assigned to the azure resource.\n"
                },
                "principalId": {
                    "type": "string",
                    "description": "The Principal ID for the Service Principal associated with the Managed Service Identity of this azure resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The Tenant ID for the Service Principal associated with the Managed Service Identity of this azure resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The Type of Identity which should be used for this azure resource. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned,UserAssigned`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "principalId",
                        "tenantId",
                        "type"
                    ]
                }
            }
        },
        "azapi:index/getResourceIdentity:getResourceIdentity": {
            "properties": {
                "identityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of User Managed Identity ID's which should be assigned to the azure resource.\n"
                },
                "principalId": {
                    "type": "string",
                    "description": "The Principal ID for the Service Principal associated with the Managed Service Identity of this azure resource.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The Tenant ID for the Service Principal associated with the Managed Service Identity of this azure resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                }
            },
            "type": "object",
            "required": [
                "identityIds",
                "principalId",
                "tenantId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the azapi package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientCertificatePassword": {
                "type": "string",
                "description": "The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.\n"
            },
            "defaultLocation": {
                "type": "string"
            },
            "defaultName": {
                "type": "string"
            },
            "defaultNamingPrefix": {
                "type": "string"
            },
            "defaultNamingSuffix": {
                "type": "string"
            },
            "defaultTags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "disableCorrelationRequestId": {
                "type": "boolean",
                "description": "This will disable the x-ms-correlation-request-id header.\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "This will disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.\n"
            },
            "environment": {
                "type": "string",
                "description": "The Cloud Environment which should be used. Possible values are public, usgovernment and china. Defaults to public.\n"
            },
            "oidcRequestToken": {
                "type": "string",
                "description": "The bearer token for the request to the OIDC provider. For use When authenticating as a Service Principal using OpenID\nConnect.\n"
            },
            "oidcRequestUrl": {
                "type": "string",
                "description": "The URL for the OIDC provider from which to request an ID token. For use When authenticating as a Service Principal\nusing OpenID Connect.\n"
            },
            "oidcToken": {
                "type": "string",
                "description": "The OIDC ID token for use when authenticating as a Service Principal using OpenID Connect.\n"
            },
            "oidcTokenFilePath": {
                "type": "string",
                "description": "The path to a file containing an OIDC ID token for use when authenticating as a Service Principal using OpenID Connect.\n"
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.\n"
            },
            "skipProviderRegistration": {
                "type": "boolean",
                "description": "Should the Provider skip registering all of the Resource Providers that it supports, if they're not already registered?\n"
            },
            "subscriptionId": {
                "type": "string",
                "description": "The Subscription ID which should be used.\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used.\n"
            },
            "useOidc": {
                "type": "boolean",
                "description": "Allow OpenID Connect to be used for authentication\n"
            }
        },
        "required": [
            "environment"
        ],
        "inputProperties": {
            "clientCertificatePassword": {
                "type": "string",
                "description": "The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client\nCertificate\n"
            },
            "clientCertificatePath": {
                "type": "string",
                "description": "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service\nPrincipal using a Client Certificate.\n"
            },
            "clientId": {
                "type": "string",
                "description": "The Client ID which should be used.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.\n"
            },
            "defaultLocation": {
                "type": "string"
            },
            "defaultName": {
                "type": "string"
            },
            "defaultNamingPrefix": {
                "type": "string"
            },
            "defaultNamingSuffix": {
                "type": "string"
            },
            "defaultTags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                }
            },
            "disableCorrelationRequestId": {
                "type": "boolean",
                "description": "This will disable the x-ms-correlation-request-id header.\n"
            },
            "disableTerraformPartnerId": {
                "type": "boolean",
                "description": "This will disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.\n"
            },
            "environment": {
                "type": "string",
                "description": "The Cloud Environment which should be used. Possible values are public, usgovernment and china. Defaults to public.\n"
            },
            "oidcRequestToken": {
                "type": "string",
                "description": "The bearer token for the request to the OIDC provider. For use When authenticating as a Service Principal using OpenID\nConnect.\n"
            },
            "oidcRequestUrl": {
                "type": "string",
                "description": "The URL for the OIDC provider from which to request an ID token. For use When authenticating as a Service Principal\nusing OpenID Connect.\n"
            },
            "oidcToken": {
                "type": "string",
                "description": "The OIDC ID token for use when authenticating as a Service Principal using OpenID Connect.\n"
            },
            "oidcTokenFilePath": {
                "type": "string",
                "description": "The path to a file containing an OIDC ID token for use when authenticating as a Service Principal using OpenID Connect.\n"
            },
            "partnerId": {
                "type": "string",
                "description": "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.\n"
            },
            "skipProviderRegistration": {
                "type": "boolean",
                "description": "Should the Provider skip registering all of the Resource Providers that it supports, if they're not already registered?\n"
            },
            "subscriptionId": {
                "type": "string",
                "description": "The Subscription ID which should be used.\n"
            },
            "tenantId": {
                "type": "string",
                "description": "The Tenant ID which should be used.\n"
            },
            "useOidc": {
                "type": "boolean",
                "description": "Allow OpenID Connect to be used for authentication\n"
            }
        },
        "requiredInputs": [
            "environment"
        ]
    },
    "resources": {
        "azapi:index/resource:Resource": {
            "description": "This resource can manage any Azure resource manager resource.\n\n\n## Import\n\nAzure resource can be imported using the `resource id`, e.g.\n\n```sh\n $ pulumi import azapi:index/resource:Resource example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.MachineLearningServices/workspaces/workspace1/computes/cluster1\n```\n\n It also supports specifying API version by using the `resource id` with `api-version` as a query parameter, e.g.\n\n```sh\n $ pulumi import azapi:index/resource:Resource example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.MachineLearningServices/workspaces/workspace1/computes/cluster1?api-version=2021-07-01\n```\n\n ",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "A JSON object that contains the request body used to create and update azure resource.\n"
                },
                "identity": {
                    "$ref": "#/types/azapi:index/ResourceIdentity:ResourceIdentity",
                    "description": "A `identity` block as defined below.\n"
                },
                "ignoreCasing": {
                    "type": "boolean",
                    "description": "Whether ignore incorrect casing returned in `body` to suppress plan-diff. Defaults to `false`.\n"
                },
                "ignoreMissingProperty": {
                    "type": "boolean",
                    "description": "Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The Azure Region where the azure resource should exist.\n"
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the azure resource. Changing this forces a new resource to be created.\n"
                },
                "output": {
                    "type": "string",
                    "description": "The output json containing the properties specified in `response_export_values`. Here're some examples to decode json and extract the value."
                },
                "parentId": {
                    "type": "string"
                },
                "removingSpecialChars": {
                    "type": "boolean",
                    "description": "Whether to remove special characters in resource name. Defaults to `false`.\n"
                },
                "responseExportValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"properties.loginServer\", \"properties.policies.quarantinePolicy.status\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "schemaValidationEnabled": {
                    "type": "boolean",
                    "description": "Whether enabled the validation on `type` and `body` with embedded schema. Defaults to `true`.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of tags which should be assigned to the azure resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                }
            },
            "required": [
                "identity",
                "location",
                "name",
                "output",
                "parentId",
                "tags",
                "type"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "A JSON object that contains the request body used to create and update azure resource.\n"
                },
                "identity": {
                    "$ref": "#/types/azapi:index/ResourceIdentity:ResourceIdentity",
                    "description": "A `identity` block as defined below.\n"
                },
                "ignoreCasing": {
                    "type": "boolean",
                    "description": "Whether ignore incorrect casing returned in `body` to suppress plan-diff. Defaults to `false`.\n"
                },
                "ignoreMissingProperty": {
                    "type": "boolean",
                    "description": "Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The Azure Region where the azure resource should exist.\n",
                    "willReplaceOnChanges": true
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the azure resource. Changing this forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "parentId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "removingSpecialChars": {
                    "type": "boolean",
                    "description": "Whether to remove special characters in resource name. Defaults to `false`.\n"
                },
                "responseExportValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"properties.loginServer\", \"properties.policies.quarantinePolicy.status\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "schemaValidationEnabled": {
                    "type": "boolean",
                    "description": "Whether enabled the validation on `type` and `body` with embedded schema. Defaults to `true`.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of tags which should be assigned to the azure resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                }
            },
            "requiredInputs": [
                "parentId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Resource resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "A JSON object that contains the request body used to create and update azure resource.\n"
                    },
                    "identity": {
                        "$ref": "#/types/azapi:index/ResourceIdentity:ResourceIdentity",
                        "description": "A `identity` block as defined below.\n"
                    },
                    "ignoreCasing": {
                        "type": "boolean",
                        "description": "Whether ignore incorrect casing returned in `body` to suppress plan-diff. Defaults to `false`.\n"
                    },
                    "ignoreMissingProperty": {
                        "type": "boolean",
                        "description": "Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The Azure Region where the azure resource should exist.\n",
                        "willReplaceOnChanges": true
                    },
                    "locks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the azure resource. Changing this forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "output": {
                        "type": "string",
                        "description": "The output json containing the properties specified in `response_export_values`. Here're some examples to decode json and extract the value."
                    },
                    "parentId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "removingSpecialChars": {
                        "type": "boolean",
                        "description": "Whether to remove special characters in resource name. Defaults to `false`.\n"
                    },
                    "responseExportValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"properties.loginServer\", \"properties.policies.quarantinePolicy.status\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    },
                    "schemaValidationEnabled": {
                        "type": "boolean",
                        "description": "Whether enabled the validation on `type` and `body` with embedded schema. Defaults to `true`.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of tags which should be assigned to the azure resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "azapi:index/resourceAction:ResourceAction": {
            "description": "This resource can perform any Azure resource manager resource action. \nIt's recommended to use `azapi.ResourceAction` resource to perform actions which change a resource's state, please use `azapi.ResourceAction` data source,\nif user wants to perform readonly action.\n\n\u003e **Note** When delete `azapi.ResourceAction`, no operation will be performed.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azapi from \"@ediri/azapi\";\nimport * as azure from \"@pulumi/azure\";\n\nconst config = new pulumi.Config();\nconst enabled = config.getBoolean(\"enabled\") || false;\nconst example = new azure.core.ResourceGroup(\"example\", {location: \"west europe\"});\nconst test = new azure.appplatform.SpringCloudService(\"test\", {\n    resourceGroupName: azurerm_resource_group.test.name,\n    location: azurerm_resource_group.test.location,\n    skuName: \"S0\",\n});\nconst start: azapi.ResourceAction[] = [];\nfor (const range = {value: 0}; range.value \u003c (enabled ? 1 : 0 == true); range.value++) {\n    start.push(new azapi.ResourceAction(`start-${range.value}`, {\n        type: \"Microsoft.AppPlatform/Spring@2022-05-01-preview\",\n        resourceId: test.id,\n        action: \"start\",\n        responseExportValues: [\"*\"],\n    }));\n}\nconst stop: azapi.ResourceAction[] = [];\nfor (const range = {value: 0}; range.value \u003c (enabled ? 0 : 1 == true); range.value++) {\n    stop.push(new azapi.ResourceAction(`stop-${range.value}`, {\n        type: \"Microsoft.AppPlatform/Spring@2022-05-01-preview\",\n        resourceId: test.id,\n        action: \"stop\",\n        responseExportValues: [\"*\"],\n    }));\n}\n```\n```python\nimport pulumi\nimport ediri_azapi as azapi\nimport pulumi_azure as azure\n\nconfig = pulumi.Config()\nenabled = config.get_bool(\"enabled\")\nif enabled is None:\n    enabled = False\nexample = azure.core.ResourceGroup(\"example\", location=\"west europe\")\ntest = azure.appplatform.SpringCloudService(\"test\",\n    resource_group_name=azurerm_resource_group[\"test\"][\"name\"],\n    location=azurerm_resource_group[\"test\"][\"location\"],\n    sku_name=\"S0\")\nstart = []\nfor range in [{\"value\": i} for i in range(0, 1 if enabled else 0 == True)]:\n    start.append(azapi.ResourceAction(f\"start-{range['value']}\",\n        type=\"Microsoft.AppPlatform/Spring@2022-05-01-preview\",\n        resource_id=test.id,\n        action=\"start\",\n        response_export_values=[\"*\"]))\nstop = []\nfor range in [{\"value\": i} for i in range(0, 0 if enabled else 1 == True)]:\n    stop.append(azapi.ResourceAction(f\"stop-{range['value']}\",\n        type=\"Microsoft.AppPlatform/Spring@2022-05-01-preview\",\n        resource_id=test.id,\n        action=\"stop\",\n        response_export_values=[\"*\"]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Azapi = ediri.Azapi;\nusing Azure = Pulumi.Azure;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var config = new Config();\n    var enabled = config.GetBoolean(\"enabled\") ?? false;\n    var example = new Azure.Core.ResourceGroup(\"example\", new()\n    {\n        Location = \"west europe\",\n    });\n\n    var test = new Azure.AppPlatform.SpringCloudService(\"test\", new()\n    {\n        ResourceGroupName = azurerm_resource_group.Test.Name,\n        Location = azurerm_resource_group.Test.Location,\n        SkuName = \"S0\",\n    });\n\n    var start = new List\u003cAzapi.ResourceAction\u003e();\n    for (var rangeIndex = 0; rangeIndex \u003c (enabled ? 1 : 0 == true); rangeIndex++)\n    {\n        var range = new { Value = rangeIndex };\n        start.Add(new Azapi.ResourceAction($\"start-{range.Value}\", new()\n        {\n            Type = \"Microsoft.AppPlatform/Spring@2022-05-01-preview\",\n            ResourceId = test.Id,\n            Action = \"start\",\n            ResponseExportValues = new[]\n            {\n                \"*\",\n            },\n        }));\n    }\n    var stop = new List\u003cAzapi.ResourceAction\u003e();\n    for (var rangeIndex = 0; rangeIndex \u003c (enabled ? 0 : 1 == true); rangeIndex++)\n    {\n        var range = new { Value = rangeIndex };\n        stop.Add(new Azapi.ResourceAction($\"stop-{range.Value}\", new()\n        {\n            Type = \"Microsoft.AppPlatform/Spring@2022-05-01-preview\",\n            ResourceId = test.Id,\n            Action = \"stop\",\n            ResponseExportValues = new[]\n            {\n                \"*\",\n            },\n        }));\n    }\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azapi/sdk/go/azapi\"\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform\"\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcfg := config.New(ctx, \"\")\n\t\tenabled := false\n\t\tif param := cfg.GetBool(\"enabled\"); param {\n\t\t\tenabled = param\n\t\t}\n\t\t_, err := core.NewResourceGroup(ctx, \"example\", \u0026core.ResourceGroupArgs{\n\t\t\tLocation: pulumi.String(\"west europe\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttest, err := appplatform.NewSpringCloudService(ctx, \"test\", \u0026appplatform.SpringCloudServiceArgs{\n\t\t\tResourceGroupName: pulumi.Any(azurerm_resource_group.Test.Name),\n\t\t\tLocation:          pulumi.Any(azurerm_resource_group.Test.Location),\n\t\t\tSkuName:           pulumi.String(\"S0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvar tmp0 bool\n\t\tif enabled {\n\t\t\ttmp0 = 1\n\t\t} else {\n\t\t\ttmp0 = 0 == true\n\t\t}\n\t\tvar start []*azapi.ResourceAction\n\t\tfor index := 0; index \u003c tmp0; index++ {\n\t\t\tkey0 := index\n\t\t\t_ := index\n\t\t\t__res, err := azapi.NewResourceAction(ctx, fmt.Sprintf(\"start-%v\", key0), \u0026azapi.ResourceActionArgs{\n\t\t\t\tType:       pulumi.String(\"Microsoft.AppPlatform/Spring@2022-05-01-preview\"),\n\t\t\t\tResourceId: test.ID(),\n\t\t\t\tAction:     pulumi.String(\"start\"),\n\t\t\t\tResponseExportValues: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tstart = append(start, __res)\n\t\t}\n\t\tvar tmp1 bool\n\t\tif enabled {\n\t\t\ttmp1 = 0\n\t\t} else {\n\t\t\ttmp1 = 1 == true\n\t\t}\n\t\tvar stop []*azapi.ResourceAction\n\t\tfor index := 0; index \u003c tmp1; index++ {\n\t\t\tkey0 := index\n\t\t\t_ := index\n\t\t\t__res, err := azapi.NewResourceAction(ctx, fmt.Sprintf(\"stop-%v\", key0), \u0026azapi.ResourceActionArgs{\n\t\t\t\tType:       pulumi.String(\"Microsoft.AppPlatform/Spring@2022-05-01-preview\"),\n\t\t\t\tResourceId: test.ID(),\n\t\t\t\tAction:     pulumi.String(\"stop\"),\n\t\t\t\tResponseExportValues: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tstop = append(stop, __res)\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.azure.core.ResourceGroup;\nimport com.pulumi.azure.core.ResourceGroupArgs;\nimport com.pulumi.azure.appplatform.SpringCloudService;\nimport com.pulumi.azure.appplatform.SpringCloudServiceArgs;\nimport com.pulumi.azapi.ResourceAction;\nimport com.pulumi.azapi.ResourceActionArgs;\nimport com.pulumi.codegen.internal.KeyedValue;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var config = ctx.config();\n        final var enabled = config.get(\"enabled\").orElse(false);\n        var example = new ResourceGroup(\"example\", ResourceGroupArgs.builder()        \n            .location(\"west europe\")\n            .build());\n\n        var test = new SpringCloudService(\"test\", SpringCloudServiceArgs.builder()        \n            .resourceGroupName(azurerm_resource_group.test().name())\n            .location(azurerm_resource_group.test().location())\n            .skuName(\"S0\")\n            .build());\n\n        for (var i = 0; i \u003c (enabled ? 1 : 0 == true); i++) {\n            new ResourceAction(\"start-\" + i, ResourceActionArgs.builder()            \n                .type(\"Microsoft.AppPlatform/Spring@2022-05-01-preview\")\n                .resourceId(test.id())\n                .action(\"start\")\n                .responseExportValues(\"*\")\n                .build());\n\n        \n}\n        for (var i = 0; i \u003c (enabled ? 0 : 1 == true); i++) {\n            new ResourceAction(\"stop-\" + i, ResourceActionArgs.builder()            \n                .type(\"Microsoft.AppPlatform/Spring@2022-05-01-preview\")\n                .resourceId(test.id())\n                .action(\"stop\")\n                .responseExportValues(\"*\")\n                .build());\n\n        \n}\n    }\n}\n```\n```yaml\nconfiguration:\n  enabled:\n    type: bool\n    default: false\nresources:\n  example:\n    type: azure:core:ResourceGroup\n    properties:\n      location: west europe\n  test:\n    type: azure:appplatform:SpringCloudService\n    properties:\n      resourceGroupName: ${azurerm_resource_group.test.name}\n      location: ${azurerm_resource_group.test.location}\n      skuName: S0\n  start:\n    type: azapi:ResourceAction\n    properties:\n      type: Microsoft.AppPlatform/Spring@2022-05-01-preview\n      resourceId: ${test.id}\n      action: start\n      responseExportValues:\n        - '*'\n    options: {}\n  stop:\n    type: azapi:ResourceAction\n    properties:\n      type: Microsoft.AppPlatform/Spring@2022-05-01-preview\n      resourceId: ${test.id}\n      action: stop\n      responseExportValues:\n        - '*'\n    options: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The name of the resource action. It's also possible to make Http requests towards the resource ID if leave this field empty.\n"
                },
                "body": {
                    "type": "string",
                    "description": "A JSON object that contains the request body.\n"
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ARM resource IDs which are used to avoid modify azapi resources at the same time.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Specifies the Http method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.\n"
                },
                "output": {
                    "type": "string",
                    "description": "The output json containing the properties specified in `response_export_values`. Here are some examples to decode json and extract the value.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of an existing azure source.\n"
                },
                "responseExportValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"keys\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "type": {
                    "type": "string",
                    "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                }
            },
            "required": [
                "output",
                "resourceId",
                "type"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The name of the resource action. It's also possible to make Http requests towards the resource ID if leave this field empty.\n",
                    "willReplaceOnChanges": true
                },
                "body": {
                    "type": "string",
                    "description": "A JSON object that contains the request body.\n"
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ARM resource IDs which are used to avoid modify azapi resources at the same time.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Specifies the Http method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of an existing azure source.\n",
                    "willReplaceOnChanges": true
                },
                "responseExportValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"keys\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "type": {
                    "type": "string",
                    "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "resourceId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The name of the resource action. It's also possible to make Http requests towards the resource ID if leave this field empty.\n",
                        "willReplaceOnChanges": true
                    },
                    "body": {
                        "type": "string",
                        "description": "A JSON object that contains the request body.\n"
                    },
                    "locks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of ARM resource IDs which are used to avoid modify azapi resources at the same time.\n"
                    },
                    "method": {
                        "type": "string",
                        "description": "Specifies the Http method of the azure resource action. Allowed values are `POST`, `PATCH`, `PUT` and `DELETE`. Defaults to `POST`.\n"
                    },
                    "output": {
                        "type": "string",
                        "description": "The output json containing the properties specified in `response_export_values`. Here are some examples to decode json and extract the value.\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID of an existing azure source.\n",
                        "willReplaceOnChanges": true
                    },
                    "responseExportValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"keys\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "azapi:index/updateResource:UpdateResource": {
            "description": "This resource can manage a subset of any existing Azure resource manager resource's properties.\n\n\u003e **Note** This resource is used to add or modify properties on an existing resource.\nWhen delete `azapi.UpdateResource`, no operation will be performed, and these properties will stay unchanged.\nIf you want to restore the modified properties to some values, you must apply the restored properties before deleting.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azapi from \"@ediri/azapi\";\nimport * as azure from \"@pulumi/azure\";\n\nconst exampleResourceGroup = new azure.core.ResourceGroup(\"exampleResourceGroup\", {location: \"west europe\"});\nconst examplePublicIp = new azure.network.PublicIp(\"examplePublicIp\", {\n    location: exampleResourceGroup.location,\n    resourceGroupName: exampleResourceGroup.name,\n    allocationMethod: \"Static\",\n});\nconst exampleLoadBalancer = new azure.lb.LoadBalancer(\"exampleLoadBalancer\", {\n    location: exampleResourceGroup.location,\n    resourceGroupName: exampleResourceGroup.name,\n    frontendIpConfigurations: [{\n        name: \"PublicIPAddress\",\n        publicIpAddressId: examplePublicIp.id,\n    }],\n});\nconst exampleNatRule = new azure.lb.NatRule(\"exampleNatRule\", {\n    resourceGroupName: exampleResourceGroup.name,\n    loadbalancerId: exampleLoadBalancer.id,\n    protocol: \"Tcp\",\n    frontendPort: 3389,\n    backendPort: 3389,\n    frontendIpConfigurationName: \"PublicIPAddress\",\n});\nconst exampleUpdateResource = new azapi.UpdateResource(\"exampleUpdateResource\", {\n    type: \"Microsoft.Network/loadBalancers@2021-03-01\",\n    resourceId: exampleLoadBalancer.id,\n    body: JSON.stringify({\n        properties: {\n            inboundNatRules: [{\n                properties: {\n                    idleTimeoutInMinutes: 15,\n                },\n            }],\n        },\n    }),\n}, {\n    dependsOn: [exampleNatRule],\n});\n```\n```python\nimport pulumi\nimport ediri_azapi as azapi\nimport json\nimport pulumi_azure as azure\n\nexample_resource_group = azure.core.ResourceGroup(\"exampleResourceGroup\", location=\"west europe\")\nexample_public_ip = azure.network.PublicIp(\"examplePublicIp\",\n    location=example_resource_group.location,\n    resource_group_name=example_resource_group.name,\n    allocation_method=\"Static\")\nexample_load_balancer = azure.lb.LoadBalancer(\"exampleLoadBalancer\",\n    location=example_resource_group.location,\n    resource_group_name=example_resource_group.name,\n    frontend_ip_configurations=[azure.lb.LoadBalancerFrontendIpConfigurationArgs(\n        name=\"PublicIPAddress\",\n        public_ip_address_id=example_public_ip.id,\n    )])\nexample_nat_rule = azure.lb.NatRule(\"exampleNatRule\",\n    resource_group_name=example_resource_group.name,\n    loadbalancer_id=example_load_balancer.id,\n    protocol=\"Tcp\",\n    frontend_port=3389,\n    backend_port=3389,\n    frontend_ip_configuration_name=\"PublicIPAddress\")\nexample_update_resource = azapi.UpdateResource(\"exampleUpdateResource\",\n    type=\"Microsoft.Network/loadBalancers@2021-03-01\",\n    resource_id=example_load_balancer.id,\n    body=json.dumps({\n        \"properties\": {\n            \"inboundNatRules\": [{\n                \"properties\": {\n                    \"idleTimeoutInMinutes\": 15,\n                },\n            }],\n        },\n    }),\n    opts=pulumi.ResourceOptions(depends_on=[example_nat_rule]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Azapi = ediri.Azapi;\nusing Azure = Pulumi.Azure;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleResourceGroup = new Azure.Core.ResourceGroup(\"exampleResourceGroup\", new()\n    {\n        Location = \"west europe\",\n    });\n\n    var examplePublicIp = new Azure.Network.PublicIp(\"examplePublicIp\", new()\n    {\n        Location = exampleResourceGroup.Location,\n        ResourceGroupName = exampleResourceGroup.Name,\n        AllocationMethod = \"Static\",\n    });\n\n    var exampleLoadBalancer = new Azure.Lb.LoadBalancer(\"exampleLoadBalancer\", new()\n    {\n        Location = exampleResourceGroup.Location,\n        ResourceGroupName = exampleResourceGroup.Name,\n        FrontendIpConfigurations = new[]\n        {\n            new Azure.Lb.Inputs.LoadBalancerFrontendIpConfigurationArgs\n            {\n                Name = \"PublicIPAddress\",\n                PublicIpAddressId = examplePublicIp.Id,\n            },\n        },\n    });\n\n    var exampleNatRule = new Azure.Lb.NatRule(\"exampleNatRule\", new()\n    {\n        ResourceGroupName = exampleResourceGroup.Name,\n        LoadbalancerId = exampleLoadBalancer.Id,\n        Protocol = \"Tcp\",\n        FrontendPort = 3389,\n        BackendPort = 3389,\n        FrontendIpConfigurationName = \"PublicIPAddress\",\n    });\n\n    var exampleUpdateResource = new Azapi.UpdateResource(\"exampleUpdateResource\", new()\n    {\n        Type = \"Microsoft.Network/loadBalancers@2021-03-01\",\n        ResourceId = exampleLoadBalancer.Id,\n        Body = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"properties\"] = new Dictionary\u003cstring, object?\u003e\n            {\n                [\"inboundNatRules\"] = new[]\n                {\n                    new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"properties\"] = new Dictionary\u003cstring, object?\u003e\n                        {\n                            [\"idleTimeoutInMinutes\"] = 15,\n                        },\n                    },\n                },\n            },\n        }),\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            exampleNatRule,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-azapi/sdk/go/azapi\"\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core\"\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/lb\"\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleResourceGroup, err := core.NewResourceGroup(ctx, \"exampleResourceGroup\", \u0026core.ResourceGroupArgs{\n\t\t\tLocation: pulumi.String(\"west europe\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texamplePublicIp, err := network.NewPublicIp(ctx, \"examplePublicIp\", \u0026network.PublicIpArgs{\n\t\t\tLocation:          exampleResourceGroup.Location,\n\t\t\tResourceGroupName: exampleResourceGroup.Name,\n\t\t\tAllocationMethod:  pulumi.String(\"Static\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleLoadBalancer, err := lb.NewLoadBalancer(ctx, \"exampleLoadBalancer\", \u0026lb.LoadBalancerArgs{\n\t\t\tLocation:          exampleResourceGroup.Location,\n\t\t\tResourceGroupName: exampleResourceGroup.Name,\n\t\t\tFrontendIpConfigurations: lb.LoadBalancerFrontendIpConfigurationArray{\n\t\t\t\t\u0026lb.LoadBalancerFrontendIpConfigurationArgs{\n\t\t\t\t\tName:              pulumi.String(\"PublicIPAddress\"),\n\t\t\t\t\tPublicIpAddressId: examplePublicIp.ID(),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleNatRule, err := lb.NewNatRule(ctx, \"exampleNatRule\", \u0026lb.NatRuleArgs{\n\t\t\tResourceGroupName:           exampleResourceGroup.Name,\n\t\t\tLoadbalancerId:              exampleLoadBalancer.ID(),\n\t\t\tProtocol:                    pulumi.String(\"Tcp\"),\n\t\t\tFrontendPort:                pulumi.Int(3389),\n\t\t\tBackendPort:                 pulumi.Int(3389),\n\t\t\tFrontendIpConfigurationName: pulumi.String(\"PublicIPAddress\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"properties\": map[string]interface{}{\n\t\t\t\t\"inboundNatRules\": []map[string]interface{}{\n\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\"properties\": map[string]interface{}{\n\t\t\t\t\t\t\t\"idleTimeoutInMinutes\": 15,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = azapi.NewUpdateResource(ctx, \"exampleUpdateResource\", \u0026azapi.UpdateResourceArgs{\n\t\t\tType:       pulumi.String(\"Microsoft.Network/loadBalancers@2021-03-01\"),\n\t\t\tResourceId: exampleLoadBalancer.ID(),\n\t\t\tBody:       pulumi.String(json0),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\texampleNatRule,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.azure.core.ResourceGroup;\nimport com.pulumi.azure.core.ResourceGroupArgs;\nimport com.pulumi.azure.network.PublicIp;\nimport com.pulumi.azure.network.PublicIpArgs;\nimport com.pulumi.azure.lb.LoadBalancer;\nimport com.pulumi.azure.lb.LoadBalancerArgs;\nimport com.pulumi.azure.lb.inputs.LoadBalancerFrontendIpConfigurationArgs;\nimport com.pulumi.azure.lb.NatRule;\nimport com.pulumi.azure.lb.NatRuleArgs;\nimport com.pulumi.azapi.UpdateResource;\nimport com.pulumi.azapi.UpdateResourceArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleResourceGroup = new ResourceGroup(\"exampleResourceGroup\", ResourceGroupArgs.builder()        \n            .location(\"west europe\")\n            .build());\n\n        var examplePublicIp = new PublicIp(\"examplePublicIp\", PublicIpArgs.builder()        \n            .location(exampleResourceGroup.location())\n            .resourceGroupName(exampleResourceGroup.name())\n            .allocationMethod(\"Static\")\n            .build());\n\n        var exampleLoadBalancer = new LoadBalancer(\"exampleLoadBalancer\", LoadBalancerArgs.builder()        \n            .location(exampleResourceGroup.location())\n            .resourceGroupName(exampleResourceGroup.name())\n            .frontendIpConfigurations(LoadBalancerFrontendIpConfigurationArgs.builder()\n                .name(\"PublicIPAddress\")\n                .publicIpAddressId(examplePublicIp.id())\n                .build())\n            .build());\n\n        var exampleNatRule = new NatRule(\"exampleNatRule\", NatRuleArgs.builder()        \n            .resourceGroupName(exampleResourceGroup.name())\n            .loadbalancerId(exampleLoadBalancer.id())\n            .protocol(\"Tcp\")\n            .frontendPort(3389)\n            .backendPort(3389)\n            .frontendIpConfigurationName(\"PublicIPAddress\")\n            .build());\n\n        var exampleUpdateResource = new UpdateResource(\"exampleUpdateResource\", UpdateResourceArgs.builder()        \n            .type(\"Microsoft.Network/loadBalancers@2021-03-01\")\n            .resourceId(exampleLoadBalancer.id())\n            .body(serializeJson(\n                jsonObject(\n                    jsonProperty(\"properties\", jsonObject(\n                        jsonProperty(\"inboundNatRules\", jsonArray(jsonObject(\n                            jsonProperty(\"properties\", jsonObject(\n                                jsonProperty(\"idleTimeoutInMinutes\", 15)\n                            ))\n                        )))\n                    ))\n                )))\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(exampleNatRule)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleResourceGroup:\n    type: azure:core:ResourceGroup\n    properties:\n      location: west europe\n  examplePublicIp:\n    type: azure:network:PublicIp\n    properties:\n      location: ${exampleResourceGroup.location}\n      resourceGroupName: ${exampleResourceGroup.name}\n      allocationMethod: Static\n  exampleLoadBalancer:\n    type: azure:lb:LoadBalancer\n    properties:\n      location: ${exampleResourceGroup.location}\n      resourceGroupName: ${exampleResourceGroup.name}\n      frontendIpConfigurations:\n        - name: PublicIPAddress\n          publicIpAddressId: ${examplePublicIp.id}\n  exampleNatRule:\n    type: azure:lb:NatRule\n    properties:\n      resourceGroupName: ${exampleResourceGroup.name}\n      loadbalancerId: ${exampleLoadBalancer.id}\n      protocol: Tcp\n      frontendPort: 3389\n      backendPort: 3389\n      frontendIpConfigurationName: PublicIPAddress\n  exampleUpdateResource:\n    type: azapi:UpdateResource\n    properties:\n      type: Microsoft.Network/loadBalancers@2021-03-01\n      resourceId: ${exampleLoadBalancer.id}\n      body:\n        fn::toJSON:\n          properties:\n            inboundNatRules:\n              - properties:\n                  idleTimeoutInMinutes: 15\n    options:\n      dependson:\n        - ${exampleNatRule}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "A JSON object that contains the request body used to add on an existing azure resource.\n"
                },
                "ignoreCasing": {
                    "type": "boolean",
                    "description": "Whether ignore incorrect casing returned in `body` to suppress plan-diff. Defaults to `false`.\n"
                },
                "ignoreMissingProperty": {
                    "type": "boolean",
                    "description": "Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`.\n"
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the azure resource. Changing this forces a new resource to be created.\n"
                },
                "output": {
                    "type": "string",
                    "description": "The output json containing the properties specified in `response_export_values`. Here're some examples to decode json and extract the value."
                },
                "parentId": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of an existing azure source. Changing this forces a new azure resource to be created.\n"
                },
                "responseExportValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"properties.loginServer\", \"properties.policies.quarantinePolicy.status\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "type": {
                    "type": "string",
                    "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                }
            },
            "required": [
                "name",
                "output",
                "parentId",
                "resourceId",
                "type"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "A JSON object that contains the request body used to add on an existing azure resource.\n"
                },
                "ignoreCasing": {
                    "type": "boolean",
                    "description": "Whether ignore incorrect casing returned in `body` to suppress plan-diff. Defaults to `false`.\n"
                },
                "ignoreMissingProperty": {
                    "type": "boolean",
                    "description": "Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`.\n"
                },
                "locks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the azure resource. Changing this forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "parentId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of an existing azure source. Changing this forces a new azure resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "responseExportValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"properties.loginServer\", \"properties.policies.quarantinePolicy.status\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                },
                "type": {
                    "type": "string",
                    "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UpdateResource resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "A JSON object that contains the request body used to add on an existing azure resource.\n"
                    },
                    "ignoreCasing": {
                        "type": "boolean",
                        "description": "Whether ignore incorrect casing returned in `body` to suppress plan-diff. Defaults to `false`.\n"
                    },
                    "ignoreMissingProperty": {
                        "type": "boolean",
                        "description": "Whether ignore not returned properties like credentials in `body` to suppress plan-diff. Defaults to `true`.\n"
                    },
                    "locks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of ARM resource IDs which are used to avoid create/modify/delete azapi resources at the same time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the azure resource. Changing this forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "output": {
                        "type": "string",
                        "description": "The output json containing the properties specified in `response_export_values`. Here're some examples to decode json and extract the value."
                    },
                    "parentId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID of an existing azure source. Changing this forces a new azure resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "responseExportValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"properties.loginServer\", \"properties.policies.quarantinePolicy.status\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "azapi:index/getResource:getResource": {
            "description": "This resource can access any existing Azure resource manager resource.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getResource.\n",
                "properties": {
                    "identity": {
                        "$ref": "#/types/azapi:index/getResourceIdentity:getResourceIdentity",
                        "description": "An `identity` block as defined below, which contains the Managed Service Identity information for this azure resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the azure resource.\n"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID of an existing azure source.\n"
                    },
                    "responseExportValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"properties.loginServer\", \"properties.policies.quarantinePolicy.status\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getResource.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "identity": {
                        "$ref": "#/types/azapi:index/getResourceIdentity:getResourceIdentity",
                        "description": "An `identity` block as defined below, which contains the Managed Service Identity information for this azure resource.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The Azure Region where the azure resource should exist.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "output": {
                        "type": "string",
                        "description": "The output json containing the properties specified in `response_export_values`. Here're some examples to decode json and extract the value."
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "responseExportValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of tags which should be assigned to the azure resource.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Type of Identity which should be used for this azure resource. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned,UserAssigned`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "identity",
                    "location",
                    "output",
                    "tags",
                    "type",
                    "id"
                ]
            }
        },
        "azapi:index/getResourceAction:getResourceAction": {
            "description": "This resource can perform resource action which gets information from an existing resource.\nIt's recommended to use `azapi.ResourceAction` data source to perform readonly action, please use `azapi.ResourceAction` resource,\nif user wants to perform actions which change a resource's state.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azapi from \"@pulumi/azapi\";\nimport * as azure from \"@pulumi/azure\";\n\nconst exampleResourceGroup = new azure.core.ResourceGroup(\"exampleResourceGroup\", {location: \"west europe\"});\nconst exampleAccount = new azure.automation.Account(\"exampleAccount\", {\n    resourceGroupName: exampleResourceGroup.name,\n    location: exampleResourceGroup.location,\n    skuName: \"Basic\",\n});\nconst exampleResourceAction = azapi.getResourceActionOutput({\n    type: \"Microsoft.Automation/automationAccounts@2021-06-22\",\n    resourceId: exampleAccount.id,\n    action: \"listKeys\",\n    responseExportValues: [\"*\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_azapi as azapi\nimport pulumi_azure as azure\n\nexample_resource_group = azure.core.ResourceGroup(\"exampleResourceGroup\", location=\"west europe\")\nexample_account = azure.automation.Account(\"exampleAccount\",\n    resource_group_name=example_resource_group.name,\n    location=example_resource_group.location,\n    sku_name=\"Basic\")\nexample_resource_action = azapi.get_resource_action_output(type=\"Microsoft.Automation/automationAccounts@2021-06-22\",\n    resource_id=example_account.id,\n    action=\"listKeys\",\n    response_export_values=[\"*\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Azapi = Pulumi.Azapi;\nusing Azure = Pulumi.Azure;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleResourceGroup = new Azure.Core.ResourceGroup(\"exampleResourceGroup\", new()\n    {\n        Location = \"west europe\",\n    });\n\n    var exampleAccount = new Azure.Automation.Account(\"exampleAccount\", new()\n    {\n        ResourceGroupName = exampleResourceGroup.Name,\n        Location = exampleResourceGroup.Location,\n        SkuName = \"Basic\",\n    });\n\n    var exampleResourceAction = Azapi.GetResourceAction.Invoke(new()\n    {\n        Type = \"Microsoft.Automation/automationAccounts@2021-06-22\",\n        ResourceId = exampleAccount.Id,\n        Action = \"listKeys\",\n        ResponseExportValues = new[]\n        {\n            \"*\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azapi/sdk/go/azapi\"\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation\"\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleResourceGroup, err := core.NewResourceGroup(ctx, \"exampleResourceGroup\", \u0026core.ResourceGroupArgs{\n\t\t\tLocation: pulumi.String(\"west europe\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleAccount, err := automation.NewAccount(ctx, \"exampleAccount\", \u0026automation.AccountArgs{\n\t\t\tResourceGroupName: exampleResourceGroup.Name,\n\t\t\tLocation:          exampleResourceGroup.Location,\n\t\t\tSkuName:           pulumi.String(\"Basic\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = azapi.LookupResourceActionOutput(ctx, azapi.GetResourceActionOutputArgs{\n\t\t\tType:       pulumi.String(\"Microsoft.Automation/automationAccounts@2021-06-22\"),\n\t\t\tResourceId: exampleAccount.ID(),\n\t\t\tAction:     pulumi.String(\"listKeys\"),\n\t\t\tResponseExportValues: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"*\"),\n\t\t\t},\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.azure.core.ResourceGroup;\nimport com.pulumi.azure.core.ResourceGroupArgs;\nimport com.pulumi.azure.automation.Account;\nimport com.pulumi.azure.automation.AccountArgs;\nimport com.pulumi.azapi.AzapiFunctions;\nimport com.pulumi.azapi.inputs.GetResourceActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleResourceGroup = new ResourceGroup(\"exampleResourceGroup\", ResourceGroupArgs.builder()        \n            .location(\"west europe\")\n            .build());\n\n        var exampleAccount = new Account(\"exampleAccount\", AccountArgs.builder()        \n            .resourceGroupName(exampleResourceGroup.name())\n            .location(exampleResourceGroup.location())\n            .skuName(\"Basic\")\n            .build());\n\n        final var exampleResourceAction = AzapiFunctions.getResourceAction(GetResourceActionArgs.builder()\n            .type(\"Microsoft.Automation/automationAccounts@2021-06-22\")\n            .resourceId(exampleAccount.id())\n            .action(\"listKeys\")\n            .responseExportValues(\"*\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleResourceGroup:\n    type: azure:core:ResourceGroup\n    properties:\n      location: west europe\n  exampleAccount:\n    type: azure:automation:Account\n    properties:\n      resourceGroupName: ${exampleResourceGroup.name}\n      location: ${exampleResourceGroup.location}\n      skuName: Basic\nvariables:\n  exampleResourceAction:\n    fn::invoke:\n      Function: azapi:getResourceAction\n      Arguments:\n        type: Microsoft.Automation/automationAccounts@2021-06-22\n        resourceId: ${exampleAccount.id}\n        action: listKeys\n        responseExportValues:\n          - '*'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getResourceAction.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The name of the resource action. It's also possible to make Http requests towards the resource ID if leave this field empty.\n",
                        "willReplaceOnChanges": true
                    },
                    "body": {
                        "type": "string",
                        "description": "A JSON object that contains the request body.\n"
                    },
                    "method": {
                        "type": "string",
                        "description": "Specifies the Http method of the azure resource action. Allowed values are `POST` and `GET`. Defaults to `POST`.\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "The ID of an existing azure source.\n",
                        "willReplaceOnChanges": true
                    },
                    "responseExportValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of path that needs to be exported from response body.\nSetting it to `[\"*\"]` will export the full response body.\nHere's an example. If it sets to `[\"keys\"]`, it will set the following json to computed property `output`.\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "It is in a format like `\u003cresource-type\u003e@\u003capi-version\u003e`. `\u003cresource-type\u003e` is the Azure resource type, for example, `Microsoft.Storage/storageAccounts`.\n`\u003capi-version\u003e` is version of the API used to manage this azure resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getResourceAction.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "method": {
                        "type": "string"
                    },
                    "output": {
                        "type": "string",
                        "description": "The output json containing the properties specified in `response_export_values`. Here are some examples to decode json and extract the value."
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "responseExportValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "output",
                    "type",
                    "id"
                ]
            }
        }
    }
}